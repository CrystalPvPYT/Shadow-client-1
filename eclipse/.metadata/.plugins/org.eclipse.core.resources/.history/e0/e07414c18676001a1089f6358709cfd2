package mystra.mods;

import org.lwjgl.input.Keyboard;

import com.darkmagician6.eventapi.EventTarget;

import mystra.events.MotionUpdateEvent;
import mystra.main.Category;
import mystra.notifications.Notification;
import mystra.notifications.NotificationManager;
import mystra.notifications.NotificationType;
import net.minecraft.client.Minecraft;
import net.minecraft.util.MathHelper;
import mystra.utils.*;
import mystra.valuesystem.BooleanValue;

public class Speed extends Module{
	
	public static String mode = "Y-Port";
	private double prevY = 0;
	private int i = 0;
	private boolean boosted;
	private BooleanValue hypixelbhop = new BooleanValue("HypixelBhop", true);
	private BooleanValue yport = new BooleanValue("Y-Port", false);
	private BooleanValue timer = new BooleanValue("Timer", false);

	public Speed() {
		super("Speed", Keyboard.KEY_V, Category.MOVEMENT);	
	}
	
	public void onUpdate() {
		this.setName("Speed");
		if(!this.isToggled()) {
			return;
		}
		
		if(mode.equalsIgnoreCase("Y-Port")) {
			onWalkingupdate();
		}
		
		if(mode.equalsIgnoreCase("Timer")) {
			timer();
		}
		
		if(mode.equalsIgnoreCase("HypixelBhop")) {
			hypixelbhop();
		}
	}
	

	public void onWalkingupdate() {
		if(!this.isToggled()) {
			return;
		}
		
		if(yport.getObject()) {
			if(mc.gameSettings.keyBindForward.isKeyDown() || mc.gameSettings.keyBindRight.isPressed() || mc.gameSettings.keyBindRight.isPressed() || mc.gameSettings.keyBindBack.isPressed()) {
				if(!mc.thePlayer.isInWater() & !mc.thePlayer.isInLava()) {
				if(mc.thePlayer.onGround) {
					mc.thePlayer.jump();
				}else {
					mc.thePlayer.motionX /= 0.8f;
					mc.thePlayer.motionZ /= 0.8f;
					mc.thePlayer.motionY += 0.06f;
				}
			}
				super.onWalkingupdate();
		}
	}
		
}
	public void timer() {
		if(!this.isToggled()) {
			return;
		}
		if(Timer.getObject()) {
			mc.timer.timerSpeed = 2.2F;
		}
	}
	
	public void setSpeed(float speed) {
		mc.thePlayer.motionX = (-(Math.sin(this.getPlayerDirection()) * speed));
		mc.thePlayer.motionZ = (Math.cos(this.getPlayerDirection()) * speed);
		mc.thePlayer.setPositionAndUpdate(mc.thePlayer.posX - (double) (MathHelper.sin(this.getPlayerDirection()) * 0.0005F), this.prevY, mc.thePlayer.posZ + (double) (MathHelper.cos(this.getPlayerDirection ()) * 0.0005F));
	}
	
	public float getPlayerDirection() {
		float yaw = mc.thePlayer.rotationYaw;
		if(mc.thePlayer.moveForward < 0.0F) {
			yaw += 180.0F;
		}
		float forward = 1.0F;
		if(mc.thePlayer.moveForward < 0.0F) {
			forward = -0.5F;
		}else if (mc.thePlayer.moveForward > 0.0F) {
			forward = 0.5F;
		}
		if(mc.thePlayer.moveStrafing > 0.0F) {
			yaw -= 90.0F * forward;
		}
		if(mc.thePlayer.moveStrafing < 0.0F) {
			yaw += 90.0F * forward;
		}
		yaw *= 0.01598576234F;
		
		return yaw;
	}
	protected void hypixelbhop() {
		if(!this.isToggled()) {
			return;
		}
		if(hypixelbhop.getObject()) {
			if (this.mc.gameSettings.keyBindForward.pressed) {

				this.mc.gameSettings.keyBindSprint.pressed = true;

				if (this.mc.thePlayer.onGround) {

					this.mc.gameSettings.keyBindJump.pressed = false;
					this.mc.thePlayer.jump();
					this.boosted = false;

				} else {

					if (!this.boosted) {

						this.mc.timer.timerSpeed = 1.28f;

						double motionV = 0.15;

						double x = this.getPosForSetPosX(motionV);
						double z = this.getPosForSetPosZ(motionV);

						this.mc.thePlayer.motionX = this.mc.thePlayer.motionX + x;
						this.mc.thePlayer.motionZ = this.mc.thePlayer.motionZ + z;
						this.boosted = true;
					}

				}
			}
		}
	}
	@Override
    public void onEnable() {
    	NotificationManager.show(new Notification(NotificationType.INFO, "Mystra", "Speed Enabled", 1));
    	super.onEnable();
    }
	
	@Override
	public void onDisable() {
		mc.timer.timerSpeed = 1f;
		mc.thePlayer.jumpMovementFactor = 0.03f;
		NotificationManager.show(new Notification(NotificationType.INFO, "Mystra", "Speed Disabled", 1));
		super.onDisable();
	}
	
		public double getPosForSetPosX(double value) {
			double yaw = Math.toRadians(Minecraft.getMinecraft().thePlayer.rotationYaw);
			double x = -Math.sin(yaw) * value;
			return x;
		}

		public double getPosForSetPosZ(double value) {
			double yaw = Math.toRadians(Minecraft.getMinecraft().thePlayer.rotationYaw);
			double z = Math.cos(yaw) * value;
			return z;
		}

	}
