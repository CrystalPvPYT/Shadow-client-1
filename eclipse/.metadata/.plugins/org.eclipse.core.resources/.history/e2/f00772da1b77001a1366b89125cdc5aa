package mystra.mods;

import java.util.Iterator;

import org.darkstorm.minecraft.gui.component.BoundedRangeComponent.ValueDisplay;
import org.lwjgl.input.Keyboard;

import mystra.main.Category;
import mystra.notifications.Notification;
import mystra.notifications.NotificationManager;
import mystra.notifications.NotificationType;
import mystra.utils.Wrapper;
import mystra.valuesystem.BooleanValue;
import net.minecraft.client.Minecraft;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;

public class Killaura extends Module {
	
	private int ticks = 0;
	private static String MultiAura = "MultiAura";
	
	private BooleanValue multiaura = new BooleanValue("MultiAura", false);
	
    public Killaura() {
		super("KillAura", Keyboard.KEY_R, Category.COMBAT);
	}
   
    @Override
    public void onUpdate() {
        if(!this.isToggled())
            return;
        
        if(MultiAura.equalsIgnoreCase("MutiAura")) {
			onMultiAura();
		}
        	
        public void onMultiAura() {
        	public void onHypixelBhop() {
        		if(!this.isToggled()) {
        			return;
        		}

        		if(hypixelbhop.getObject()) {
        	ticks++;
            if(ticks >= 20 - speed())
            {
           
            for(Iterator<Entity> entities = mc.theWorld.loadedEntityList.iterator(); entities.hasNext();) {
                Object theObject = entities.next();
                if(theObject instanceof EntityLivingBase) {
                    EntityLivingBase entity = (EntityLivingBase) theObject;
                   
                    if(entity instanceof EntityPlayerSP) continue;
                   
                    if(Wrapper.mc.thePlayer.getDistanceToEntity(entity) <= getRange()) {
                        if(entity.isEntityAlive()) {
                            mc.playerController.attackEntity(mc.thePlayer, entity);
                            mc.thePlayer.swingItem();
                            ticks = 0;
                            continue;
                        }
                    }
                }
                super.onUpdate();
            }
           }
        }
        
        }
    @Override
    public void onEnable() {
    	NotificationManager.show(new Notification(NotificationType.INFO, "Mystra", "Killaura Enabled", 1));
    	super.onEnable();
    }
    
    @Override
    public void onDisable() {
    	NotificationManager.show(new Notification(NotificationType.INFO, "Mystra", "Killaura Disabled", 1));
    	super.onDisable();
    }
    
    private int speed()
    {
    	return 15;
    }
    
    private float getRange()
    {
    	return 10f;
    }
}
