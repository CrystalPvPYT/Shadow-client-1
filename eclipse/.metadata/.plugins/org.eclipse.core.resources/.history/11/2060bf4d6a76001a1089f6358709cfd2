package mystra.mods;

import java.lang.reflect.Field;

import org.lwjgl.input.Keyboard;

import com.darkmagician6.eventapi.EventTarget;

import mystra.events.MotionUpdateEvent;
import mystra.main.Category;
import mystra.utils.BlockUtil;
import mystra.utils.TimeHelper;
import mystra.valuesystem.BooleanValue;
import mystra.valuesystem.NumberValue;
import mystra.valuesystem.Value;
import net.minecraft.block.BlockAir;
import net.minecraft.client.settings.KeyBinding;
import net.minecraft.init.Blocks;
import net.minecraft.item.ItemBlock;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.Vec3;

public class Scaffold extends Module {
    public Scaffold() {
		super("Scaffold Comming Soon", Keyboard.KEY_N, Category.MOVEMENT);
	}
    
    @Override
	public void onEnable()
	{
		EVENTS.add(UpdateListener.class, this);
	}
	
	@Override
	public void onDisable()
	{
		EVENTS.remove(UpdateListener.class, this);
	}
	
	@Override
	public void onUpdate()
	{
		BlockPos belowPlayer = new BlockPos(MC.player).down();
		
		// check if block is already placed
		if(!BlockUtils.getState(belowPlayer).getMaterial().isReplaceable())
			return;
		
		// search blocks in hotbar
		int newSlot = -1;
		for(int i = 0; i < 9; i++)
		{
			// filter out non-block items
			ItemStack stack = MC.player.inventory.getInvStack(i);
			if(stack.isEmpty() || !(stack.getItem() instanceof BlockItem))
				continue;
			
			// filter out non-solid blocks
			Block block = Block.getBlockFromItem(stack.getItem());
			BlockState state = block.getDefaultState();
			if(!Block.isShapeFullCube(state
				.getCullingShape(EmptyBlockView.INSTANCE, BlockPos.ORIGIN)))
				continue;
			
			// filter out blocks that would fall
			if(block instanceof FallingBlock && FallingBlock
				.canFallThrough(BlockUtils.getState(belowPlayer.down())))
				continue;
			
			newSlot = i;
			break;
		}
		
		// check if any blocks were found
		if(newSlot == -1)
			return;
		
		// set slot
		int oldSlot = MC.player.inventory.selectedSlot;
		MC.player.inventory.selectedSlot = newSlot;
		
		placeBlock(belowPlayer);
		
		// reset slot
		MC.player.inventory.selectedSlot = oldSlot;
	}