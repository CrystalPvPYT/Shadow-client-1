package mystra.tabgui;

import java.util.ArrayList;
import java.util.HashMap;

import org.lwjgl.input.Keyboard;

import mystra.main.Mystra;
import mystra.mods.*;

public class TabManager {

	private ArrayList<Tab> tabs;
	private int currentTab;

	private HashMap<Integer, Module> renderMods, movementMods, combatMods, playerMods;
	private int currentRenderMod, currentMovementMod, currentCombatMod, currentPlayerMod;

	public TabManager() {
		tabs = new ArrayList();
		currentTab = 0;
		renderMods = new HashMap();
		movementMods = new HashMap();
		combatMods = new HashMap();
		playerMods = new HashMap();
		currentRenderMod = 0;
		currentMovementMod = 0;
		currentCombatMod = 0;
		currentPlayerMod = 0;
		tabs.add(new TabOne());
		tabs.add(new TabTwo());
		tabs.add(new TabThree());
		tabs.add(new TabFour());
		
		renderMods.put(0, new ChestESP());
		renderMods.put(1, new Fullbright());
		renderMods.put(2, new MobESP());
		renderMods.put(3, new PlayerTracer());
		
		movementMods.put(0, new Sprint());
		movementMods.put(1, new Step());
		movementMods.put(2, new Glide());
		movementMods.put(3, new Flight());
		movementMods.put(4, new Speed());
		movementMods.put(5, new AntiKnockback());
		
		
		combatMods.put(0, new Killaura());
		combatMods.put(1, new Criticals());
		combatMods.put(2, new Aimbot());
		
		playerMods.put(0, new Nofall());
		playerMods.put(1, new ChestStealer());
		playerMods.put(2, new Timer());
		playerMods.put(3, new FastPlace());
		
	}
	
	public ArrayList<Tab> getTabs(){
		return tabs;
	}
	
	public int getCurrentPlayerMod(){
		return currentPlayerMod;
	}
	
	public int getCurrentCombatMod(){
		return currentCombatMod;
	}
	
	public int getCurrentMovementMod(){
		return currentMovementMod;
	}
	
	public int getCurrentRenderMod(){
		return currentRenderMod;
	}
	
	public int getCurrentTab(){
		return currentTab;
	}

	public void keyPressed(int k) {
		switch (k) {
		case Keyboard.KEY_UP:
			if(tabs.get(currentTab).isExpanded()){
				switch(currentTab){
				case 0:
					if(currentRenderMod != 0){
						currentRenderMod--;
					}
					break;
				case 1:
					if(currentMovementMod != 0){
						currentMovementMod--;
					}
					break;
				case 2:
					if(currentCombatMod != 0){
						currentCombatMod--;
					}
					break;
				case 3:
					if(currentPlayerMod != 0){
						currentPlayerMod--;
					}
					break;
				}
			}else{
				if(currentTab != 0){
					currentTab--;
				}
			}
			break;
		case Keyboard.KEY_DOWN:
			if(tabs.get(currentTab).isExpanded()){
				switch(currentTab){
				case 0:
					if(currentRenderMod != renderMods.size()-1){
						currentRenderMod++;
					}
					break;
				case 1:
					if(currentMovementMod != movementMods.size()-1){
						currentMovementMod++;
					}
					break;
				case 2:
					if(currentCombatMod != combatMods.size()-1){
						currentCombatMod++;
					}
					break;
				case 3:
					if(currentPlayerMod != playerMods.size()-1){
						currentPlayerMod++;
					}
					break;
				}
			}else{
				if(currentTab != 3){
					currentTab++;
				}
			}
			break;
		case Keyboard.KEY_RIGHT:
			if(tabs.get(currentTab).isExpanded()){
				switch(currentTab){
				case 0:
					toggleMod(renderMods.get(currentRenderMod).getName());
					break;
				case 1:
					toggleMod(movementMods.get(currentMovementMod).getName());
					break;
				case 2:
					toggleMod(combatMods.get(currentCombatMod).getName());
					break;
				case 3:
					toggleMod(playerMods.get(currentPlayerMod).getName());
					break;
				}
			}else{
				tabs.get(currentTab).setExpanded(true);
			}
			break;
		case Keyboard.KEY_LEFT:
			if(tabs.get(currentTab).isExpanded()){
				tabs.get(currentTab).setExpanded(false);
			}
			break;
		}
	}
	
	private void toggleMod(String n){
		for(Module m: Mystra.getModules()){
			if(m.getName().equalsIgnoreCase(n)){
				m.toggle();
				break;
			}
		}
	}

}