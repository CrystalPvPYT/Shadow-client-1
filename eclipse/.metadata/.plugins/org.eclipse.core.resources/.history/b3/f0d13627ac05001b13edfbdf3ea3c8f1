package me.mystra.hud.draggablehud.hudmods.impl;

import java.awt.Color;

import me.mystra.Mystra;
import me.mystra.hud.draggablehud.ScreenPosition;
import me.mystra.hud.draggablehud.hudmods.ModDraggable;
import me.mystra.module.combat.KillAura;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.Gui;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.client.renderer.RenderHelper;
import net.minecraft.client.renderer.entity.RenderManager;
import net.minecraft.entity.EntityLivingBase;

public class TargetHud extends ModDraggable {
	private ScreenPosition pos = ScreenPosition.fromRelativePosition(0.50, 0.50);
	@Override
	public int getWidth() {
		return 50;
	}

	@Override
	public int getHeight() {
		return 50;
		// Ok.. try ._.
	}

	@Override
	public void render(ScreenPosition pos) {
		if(Mystra.instance.moduleManager.getModuleByName("KillAura").isToggled()) {
			if(Mystra.instance.settingsManager.getSettingByName("TargetHUD").getValBoolean()) {
				if(KillAura.target == null) {
					return;
				}
				if(KillAura.target.getDistanceToEntity(mc.thePlayer) < 8F) {
					Gui.drawRect(pos.getAbsoluteX() - 36, pos.getAbsoluteY() - 1, pos.getAbsoluteX() + 101, pos.getAbsoluteY() + 36, new Color(0, 0, 0, 185).getRGB());
					Gui.drawRect(pos.getAbsoluteX() + 100, pos.getAbsoluteY(), pos.getAbsoluteX(), pos.getAbsoluteY() + 35, new Color(0, 0, 0, 102).getRGB());
					Gui.drawRect(pos.getAbsoluteX() - 35, pos.getAbsoluteY(), pos.getAbsoluteX(), pos.getAbsoluteY() + 35, new Color(0, 0, 0, 150).getRGB());
					Gui.drawRect(pos.getAbsoluteX() + 100, pos.getAbsoluteY() + 35, pos.getAbsoluteX() + 1, pos.getAbsoluteY() + 23, new Color(255, 0, 0, 255).getRGB());
					Minecraft.getMinecraft().fontRendererObj.drawString("Name: " + KillAura.target.getName(), pos.getAbsoluteX() + 2, pos.getAbsoluteY() + 2, -1);
					Minecraft.getMinecraft().fontRendererObj.drawString("You Have To Win!", pos.getAbsoluteX() + 2, pos.getAbsoluteY() + 12, -1);
					Minecraft.getMinecraft().fontRendererObj.drawString("Health: " + KillAura.target.getHealth(), pos.getAbsoluteX() + 40, pos.getAbsoluteY() + 26, -1);
				}
			}
		}
	}
	@Override
	public void renderDummy(ScreenPosition pos) {
		Gui.drawRect(pos.getAbsoluteX() - 36, pos.getAbsoluteY() - 1, pos.getAbsoluteX() + 101, pos.getAbsoluteY() + 36, new Color(0, 0, 0, 185).getRGB());
		Gui.drawRect(pos.getAbsoluteX() + 100, pos.getAbsoluteY(), pos.getAbsoluteX(), pos.getAbsoluteY() + 35, new Color(0, 0, 0, 102).getRGB());
		Gui.drawRect(pos.getAbsoluteX() - 35, pos.getAbsoluteY(), pos.getAbsoluteX(), pos.getAbsoluteY() + 35, new Color(0, 0, 0, 150).getRGB());
		Gui.drawRect(pos.getAbsoluteX() + 100, pos.getAbsoluteY() + 35, pos.getAbsoluteX() + 1, pos.getAbsoluteY() + 23, new Color(255, 0, 0, 255).getRGB());
		Minecraft.getMinecraft().fontRendererObj.drawString("Name: ", pos.getAbsoluteX() + 2, pos.getAbsoluteY() + 2, -1);
		Minecraft.getMinecraft().fontRendererObj.drawString("You Have To Win!", pos.getAbsoluteX() + 2, pos.getAbsoluteY() + 12, -1);
		Minecraft.getMinecraft().fontRendererObj.drawString("Health: ", pos.getAbsoluteX() + 40, pos.getAbsoluteY() + 26, -1);
		super.renderDummy(pos);
	}
	@Override
	public void save(ScreenPosition pos) {
		this.pos = pos;
	}

	@Override
	public ScreenPosition load() {
		return pos;
	}
	public static void drawEntityOnScreen(int posX, int posY, int scale, float mouseX, float mouseY, EntityLivingBase ent, boolean rotate) {
	    GlStateManager.enableDepth();
	    GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
	    GlStateManager.enableColorMaterial();
	    GlStateManager.pushMatrix();
	    GlStateManager.translate(posX, posY, 50.0F);
	    GlStateManager.scale(-scale, scale, scale);
	    GlStateManager.rotate(180.0F, 0.0F, 0.0F, 1.0F);
	    float f = ent.renderYawOffset;
	    float f1 = ent.rotationYaw;
	    float f2 = ent.rotationPitch;
	    float f3 = ent.prevRotationYawHead;
	    float f4 = ent.rotationYawHead;
	    GlStateManager.rotate(135.0F, 0.0F, 1.0F, 0.0F);
	    RenderHelper.enableStandardItemLighting();
	    GlStateManager.rotate(-135.0F, 0.0F, 1.0F, 0.0F);
	    if (rotate) {
	      ent.renderYawOffset = (float)Math.atan(((posX - mouseX) / 40.0F)) * 20.0F;
	      ent.rotationYaw = (float)Math.atan(((posX - mouseX) / 40.0F)) * 40.0F;
	      GlStateManager.rotate(-((float)Math.atan(((posY - mouseY) / 40.0F) - ent.getEyeHeight())) * 20.0F, 
	          1.0F, 0.0F, 0.0F);
	      ent.rotationPitch = -((float)Math.atan(((posY - mouseY) / 40.0F) - ent.getEyeHeight())) * 20.0F;
	    } else {
	      ent.renderYawOffset = 0.0F;
	      ent.rotationYaw = 0.0F;
	      ent.rotationPitch = 0.0F;
	    } 
	    
	    ent.rotationYawHead = ent.rotationYaw;
	    ent.prevRotationYawHead = ent.rotationYaw;
	    GlStateManager.translate(0.0F, 0.0F, 0.0F);
	    RenderManager rendermanager = Minecraft.getMinecraft().getRenderManager();
	    rendermanager.setPlayerViewY(180.0F);
	    rendermanager.setRenderShadow(false);

	    
	    rendermanager.doRenderEntity(ent, 0.0D, 0.0D, 0.0D, 0.0F, 1.0F, false);
	    rendermanager.setRenderShadow(true);
	    ent.renderYawOffset = f;
	    ent.rotationYaw = f1;
	    ent.rotationPitch = f2;
	    ent.prevRotationYawHead = f3;
	    ent.rotationYawHead = f4;
	    GlStateManager.popMatrix();
	    RenderHelper.disableStandardItemLighting();
	    GlStateManager.disableRescaleNormal();
	    GlStateManager.setActiveTexture(OpenGlHelper.lightmapTexUnit);
	    GlStateManager.disableTexture2D();
	    GlStateManager.setActiveTexture(OpenGlHelper.defaultTexUnit);
	    GlStateManager.disableDepth();
	}
}
