package mystra.mods;

import org.lwjgl.input.Keyboard;

import mystra.main.Category;
import net.minecraft.client.Minecraft;
import net.minecraft.potion.Potion;

public class LongJump extends Module{
	
	public static Minecraft mc = Minecraft.getMinecraft();
	private static float air;
    private static float groundTicks;
    private static int stage;

	public LongJump() {
		super("LongJump", Keyboard.KEY_B, Category.MOVEMENT);
	}
	
	public void onUpdate2() {
		(!this.isToggled()){
		float x2 = 0.7f + getSpeedEffect() * 0.45f;
        if ((mc.thePlayer.moveForward != 0 || mc.thePlayer.moveStrafing != 0) && mc.thePlayer.onGround) {
            groundTicks++;
            setMotion(0.15);
            mc.thePlayer.jump();
            stage = 1;
        }
        if (isOnGround(0.001)) {
            air = 0;
        } else {
            if(mc.thePlayer.isCollidedVertically)
                stage = 0;
            double speed = (0.95 + getSpeedEffect() * 0.2) - air / 25;
            if(speed < defaultSpeed()-0.05){ // + (0.025*MoveUtils.getSpeedEffect())
                speed = defaultSpeed()-0.05;
            }
            if(stage < 4)
                speed = defaultSpeed();
            setMotion(speed);
            mc.thePlayer.motionY = getOldMotion(stage);
            if(stage > 0){
                stage ++;
            }
            air += x2;
        }
		}
	}
	public static int getSpeedEffect() {
        if (mc.thePlayer.isPotionActive(Potion.moveSpeed))
            return mc.thePlayer.getActivePotionEffect(Potion.moveSpeed).getAmplifier() + 1;
        else
            return 0;
    }
    public static boolean isOnGround(double height) {
        if (!mc.theWorld.getCollidingBoundingBoxes(mc.thePlayer, mc.thePlayer.getEntityBoundingBox().offset(0.0D, -height, 0.0D)).isEmpty()) {
            return true;
        } else {
            return false;
        }
    }
    public static double defaultSpeed() {
        double baseSpeed = 0.2873D;
        if (Minecraft.getMinecraft().thePlayer.isPotionActive(Potion.moveSpeed)) {
            int amplifier = Minecraft.getMinecraft().thePlayer.getActivePotionEffect(Potion.moveSpeed).getAmplifier();
          //  if(((Options) settings.get(MODE).getValue()).getSelected().equalsIgnoreCase("Hypixel")){
           //   baseSpeed *= (1.0D + 0.225D * (amplifier + 1));
           // }else
                baseSpeed *= (1.0D + 0.2D * (amplifier + 1));
        }
        return baseSpeed;
    }
    public static void setMotion(double speed) {
        double forward = mc.thePlayer.movementInput.moveForward;
        double strafe = mc.thePlayer.movementInput.moveStrafe;
        float yaw = mc.thePlayer.rotationYaw;
        if ((forward == 0.0D) && (strafe == 0.0D)) {
            mc.thePlayer.motionX = 0;
            mc.thePlayer.motionZ = 0;
        } else {
            if (forward != 0.0D) {
                if (strafe > 0.0D) {
                    yaw += (forward > 0.0D ? -45 : 45);
                } else if (strafe < 0.0D) {
                    yaw += (forward > 0.0D ? 45 : -45);
                }
                strafe = 0.0D;
                if (forward > 0.0D) {
                    forward = 1;
                } else if (forward < 0.0D) {
                    forward = -1;
                }
            }
            mc.thePlayer.motionX = forward * speed * Math.cos(Math.toRadians(yaw + 90.0F)) + strafe * speed * Math.sin(Math.toRadians(yaw + 90.0F));
            mc.thePlayer.motionZ = forward * speed * Math.sin(Math.toRadians(yaw + 90.0F)) - strafe * speed * Math.cos(Math.toRadians(yaw + 90.0F));
        }
    }
    double getMotion(int stage){
        boolean isMoving = (mc.thePlayer.moveStrafing != 0 || mc.thePlayer.moveForward != 0);
        double[] mot = {0.396,-0.122,-0.1,0.423, 0.35,0.28,0.217,0.15, 0.025,-0.00625,-0.038,-0.0693,-0.102,-0.13,
                -0.018,-0.1,-0.117,-0.14532,-0.1334, -0.1581, -0.183141, -0.170695, -0.195653, -0.221, -0.209, -0.233, -0.25767,
                -0.314917, -0.371019, -0.426};
        stage --;
        if(stage >= 0 && stage < mot.length){
            double motion = mot[stage];
            return motion;
        }else{
            return mc.thePlayer.motionY;
        }
    }
    double getOldMotion(int stage){
        boolean isMoving = (mc.thePlayer.moveStrafing != 0 || mc.thePlayer.moveForward != 0);
        double[] mot = {0.345,0.2699,0.183,0.103,0.024,-0.008,-0.04,-0.072,-0.104,-0.13,-0.019,-0.097};
        double[] notMoving = {0.345,0.2699,0.183,0.103,0.024,-0.008,-0.04,-0.072,-0.14,-0.17,-0.019,-0.13};
        stage --;
        if(stage >= 0 && stage < mot.length){
            if((mc.thePlayer.moveStrafing == 0 && mc.thePlayer.moveForward == 0) || mc.thePlayer.isCollidedHorizontally){
                return notMoving[stage];
            }
            return mot[stage];
        }else{
            return mc.thePlayer.motionY;
        }
    }
}